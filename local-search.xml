<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基础知识</title>
    <link href="/blog/2024/07/26/linux/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/blog/2024/07/26/linux/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h3 id="linux的发行版本"><a href="#linux的发行版本" class="headerlink" title="linux的发行版本"></a>linux的发行版本</h3><p><img src="/blog/images/WEBRESOURCEdea7cd4b5044f1814039227aa57292f3%E6%88%AA%E5%9B%BE.png"></p><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><ul><li>Linux下的软件包可细分为两种，分别是<strong>源码包</strong>和<strong>二进制包</strong></li><li>源码包就是一大堆源代码程序，一般包含多个文件，为了方便发布，通常会将源码包做打包压缩处理，Linux 中最常用的打包压缩格式为“tar.gz”，因此源码包又被称为 Tarball。因为可能会需要一些依赖环境，所以安装前就需要先安装这些依赖环境</li><li>二进制包：是源码包经过成功编译之后产生的包。由于二进制包在发布之前就已经完成了编译的工作，因此用户安装软件的速度较快（同 Windows下安装软件速度相当），且安装过程报错几率大大减小。因为已经编译过，依赖环境已经编译进二进制文件中，所以会省去很多麻烦</li><li>二进制包是 Linux 下默认的软件安装包，因此二进制包又被称为默认安装软件包。</li></ul><h4 id="目前主要有以下-2-大主流的二进制包管理系统："><a href="#目前主要有以下-2-大主流的二进制包管理系统：" class="headerlink" title="目前主要有以下 2 大主流的二进制包管理系统："></a>目前主要有以下 2 大主流的二进制包管理系统：</h4><p><strong>RPM 包管理系统</strong>： 功能强大，安装、升级、査询和卸载非常简单方便，因此很多 Linux 发行版都默认使用此机制作为软件安装的管理方式，例如 Fedora、CentOS、SuSE 等</p><p><strong>DPKG 包管理系统</strong>： 由 Debian Linux 所开发的包管理机制，通过 DPKG 包，Debian Linux 就可以进行软件包管理，主要应用在 Debian 和 Ubuntu 中</p><p><img src="/blog/images/WEBRESOURCE9731d18bcb5321cfa264a5153b5dbc4a%E6%88%AA%E5%9B%BE.png"></p><p><strong>yum</strong>：全称“Yellow dog Updater, Modified”，是一个专门为了解决包的依赖关系而存在的软件包管理器。就好像 Windows 系统上可以通过 360 软件管家实现软件的一键安装、升级和卸载</p><p><strong>apt</strong>：是 Advanced Packaging Tool，是 Linux 下的一款安装包管理工具，可以在终端中方便的 安装／卸载／更新软件包</p><p><img src="/blog/images/WEBRESOURCEe65ac98f274d246b4cac2da80154c292%E6%88%AA%E5%9B%BE.png"></p><h3 id="Linux的设计思想：一切皆文件"><a href="#Linux的设计思想：一切皆文件" class="headerlink" title="Linux的设计思想：一切皆文件"></a>Linux的设计思想：一切皆文件</h3><p>Linux 中所有内容都是以文件的形式保存和管理的，即一切皆文件 。具体可分为以下几种类型：</p><ol><li>- 普通文件：类似 mp4、pdf、html 这样，可直接拿来使用的文件都属于普通文件</li><li>d 目录文件：目录文件包含了此目录中各个文件的文件名以及指向这些文件的指针，打开目录等同于打开目录文件，只要你有权限，可以随意访问目录中的任何文件。</li><li>c 字符设备文件：这些文件通常隐藏在 &#x2F;dev&#x2F; 目录下，当进行设备读取或外设交互时才会被使用。例如，磁盘光驱属于块设备文件，串口设备则属于字符设备文件。 Linux 系统中的所有设备，要么是块设备文件，要么是字符设备文件。 </li><li>s 套接字文件（socket）：套接字文件一般隐藏在 &#x2F;var&#x2F;run&#x2F; 目录下，用于进程间的网络通信。 </li><li>l 链接文件（symbolic link）：类似与 Windows 中的快捷方式，是指向另一文件的简介指针（也就是软链接）。 </li><li>p 管道文件（pipe）：主要用于进程间通信。例如，使用 mkfifo 命令创建一个 FIFO 文件，与此同时，启用进程 A 从FIFO文件读数据，启用进程 B 从 FIFO文件中写数据，随写随读。</li></ol><h3 id="Linux文件目录结构"><a href="#Linux文件目录结构" class="headerlink" title="Linux文件目录结构"></a>Linux文件目录结构</h3><ul><li>&#x2F;：根目录，一般根目录下只存放目录，不要存放文件，&#x2F;etc、&#x2F;bin、&#x2F;dev、&#x2F;lib、&#x2F;sbin应该和根目录放置在一个分区中  </li><li>&#x2F;bin: &#x2F;usr&#x2F;bin:可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。 </li><li>&#x2F;boot：放置linux系统启动时用到的一些文件，比如内核文件和启动引导文件。&#x2F;boot&#x2F;vmlinuz为linux的内核文件，以及&#x2F;boot&#x2F;gurb。建议单独分区，分区大小100M即可 </li><li>&#x2F;dev：存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount &#x2F;dev&#x2F;cdrom &#x2F;mnt。 </li><li>&#x2F;etc：系统配置文件存放的目录，系统通过rpm默认安装方式的配置文件全都在这个目录。不建议在此目录下存放可执行文件，重要的配置文件有&#x2F;etc&#x2F;inittab、&#x2F;etc&#x2F;fstab、&#x2F;etc&#x2F;init.d、&#x2F;etc&#x2F;X11、&#x2F;etc&#x2F;sysconfig、&#x2F;etc&#x2F;xinetd.d修改配置文件之前记得备份。 注：&#x2F;etc&#x2F;X11存放与x windows有关的设置。 </li><li>&#x2F;home：系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，<del>表示当前用户的家目录，</del>test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据 </li><li>&#x2F;lib:&#x2F;usr&#x2F;lib:&#x2F;usr&#x2F;local&#x2F;lib：系统调用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为&#x2F;lib&#x2F;modules。</li><li>&#x2F;mnt:&#x2F;media:&#x2F;misc：光盘默认挂载点，通常光盘挂载于&#x2F;mnt&#x2F;cdrom下，也不一定，可以选择任意位置进行挂载 </li><li>&#x2F;opt：给主机额外安装软件所摆放的目录,即第三方软件的安装位置。手工安装的包都可以放在这个位置。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 &#x2F;usr&#x2F;local 目录下</li><li>&#x2F;root：系统管理员root的家目录，系统第一个启动的分区为&#x2F;，所以最好将&#x2F;root和&#x2F;放置在一个分区下。</li><li>&#x2F;sbin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;sbin：放置系统管理员使用的可执行命令即系统环境设置相关命令，如fdisk、shutdown、mount等。与&#x2F;bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。</li><li>&#x2F;srv：服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在&#x2F;srv&#x2F;www内</li><li>&#x2F;tmp：一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下</li><li>&#x2F;proc：此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有&#x2F;proc&#x2F;cpuinfo、&#x2F;proc&#x2F;interrupts、&#x2F;proc&#x2F;dma、&#x2F;proc&#x2F;ioports、&#x2F;proc&#x2F;net&#x2F;*等</li><li>&#x2F;lost+fount：系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于&#x2F;disk 中，此目录下就会自动产生目录&#x2F;disk&#x2F;lost+found </li><li>&#x2F;usr：应用程序存放目录，全称为 Unix Software Resource，此目录用于存储系统软件资源。FHS 建议所有开发者，应把软件产品的数据合理的放置在 &#x2F;usr 目录下的各子目录中，而不是为他们的产品创建单独的目录。&#x2F;usr&#x2F;bin存放应用程序，&#x2F;usr&#x2F;share存放共享数据，&#x2F;usr&#x2F;lib存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。&#x2F;usr&#x2F;local:存放软件升级包。&#x2F;usr&#x2F;share&#x2F;doc:系统说明文件存放目录。&#x2F;usr&#x2F;share&#x2F;man:?程序说明文件存放目录，使用 man ls时会查询&#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;ls.1.gz的内容建议单独分区，设置较大的磁盘空间</li></ul><p><img src="/blog/images/WEBRESOURCEd609518d33a119b1d3f1200067f3950d%E6%88%AA%E5%9B%BE.png"></p><ul><li>&#x2F;var：放置系统执行过程中经常变化的文件，如随时更改的日志文件&#x2F;var&#x2F;log，&#x2F;var&#x2F;log&#x2F;message：所有的登录文件存放目录，&#x2F;var&#x2F;spool&#x2F;mail：邮件存放的目录，&#x2F;var&#x2F;run:程序或服务启动后，其PID存放在该目录下。建议单独分区，设置较大的磁盘空间</li></ul><p><img src="/blog/images/WEBRESOURCEfd92c04351383b1e3171fb103f8757cc%E6%88%AA%E5%9B%BE.png"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件管理</title>
    <link href="/blog/2024/07/26/linux/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <url>/blog/2024/07/26/linux/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a><strong>文件</strong></h1><h6 id="linux下文件类型-常见三种文件-："><a href="#linux下文件类型-常见三种文件-：" class="headerlink" title="linux下文件类型(常见三种文件)："></a><strong>linux下文件类型(常见三种文件)：</strong></h6><blockquote><p>***** 文件：表示符： <strong>-</strong><br>*** <strong>目录(类似win7下的文件夹)：表示符：</strong>d**<br>*** <strong>链接(类似win7下的快捷方式)：表示符：</strong>l**</p></blockquote><h6 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a><strong>文件权限</strong></h6><blockquote><ul><li>可读  r</li><li>可写  w</li><li>可执行(针对脚本，比如shell脚本)  x</li><li>特殊字符：<br><strong>-</strong>**  表示没有任何权限**</li></ul><p>权限的数字表示方法：<br>*** rw-  **     —&gt; 6<br>*** 二进制数字之和的方式**<br>R          W        X<br>2^2      2^1      2^0<br>  4          2          1  </p></blockquote><h6 id="文件归属"><a href="#文件归属" class="headerlink" title="文件归属"></a><strong>文件归属</strong></h6><blockquote><ul><li>拥有着    owner  ** u**</li><li>属于组    grouip   <strong>g</strong></li><li>其他人    other   **  o**</li></ul></blockquote><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">-rw-rw-r--   <span class="hljs-number">2</span> <span class="hljs-keyword">beifeng </span><span class="hljs-keyword">beifeng </span><span class="hljs-number">4096</span> May <span class="hljs-number">30</span> <span class="hljs-number">15</span>:<span class="hljs-number">15</span> <span class="hljs-keyword">bin</span><br><span class="hljs-keyword"></span><br>第一部分：-rw-rw-r--<br>十个字符，代表不同的意义<br>-   rw-   rw-    r--       ----&gt;  数字表示权限：<span class="hljs-number">664</span><br>第一个字符：<br>表示的是文件的类型<br>后面的<span class="hljs-number">9</span>个字符，分为<span class="hljs-number">3</span>组，表示的是此文件针对不同用户的权限关系<br>为什么是三组呢？<br>因为一个文件对于用户来说，属于三个部分<br>* 拥有着    rw-<br>* 所属组    rw-<br>* 其他人    r--<br>第二部分：<span class="hljs-number">2</span>       硬链接数，通俗地讲，就是有多少种方式，可以访问到当前目录／文件<br>第三部分：<span class="hljs-keyword">beifeng </span><span class="hljs-keyword">beifeng</span><br><span class="hljs-keyword"></span>* 第一个字符串表示的是   文件的拥有者，<span class="hljs-keyword">beifeng </span><br>* 第二个字符串表示的是   文件所属组， <span class="hljs-keyword">beifeng</span><br><span class="hljs-keyword"></span><br>第四部分：<span class="hljs-number">4096</span><br>如果是文件夹，表示文件夹中多少文件<br>如果是文件，表示文件大小<br></code></pre></td></tr></table></figure><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><ol><li><p><strong>创建文件</strong></p></li><li><p>使用touch命令： touch test.py</p></li></ol><p>2 使用vi&#x2F;vim方式：本意是修改文件，如果不存在，则创建：$ vi test.py</p><p>3 使用echo命令， 覆盖 | 追加：对文件内容进行追加  $ echo “******”  &gt;&gt; text.py</p><ol><li><p><strong>编辑文件</strong></p></li><li><p>vi | vim：</p></li></ol><blockquote><p>1.dd：表示删除光标所在行的内容<br>2. u: 撤销上次命令<br>3. ctrl + r: 恢复撤销的命令<br>4. o：表示光标进入下一行，并进行插入数据模式<br>5. 异常处理&#x2F;交换文件：vim -r 文件名: 恢复交换文件；rm *.swp：删除交换文件<br>6. shift + G: vi跳到文件末尾</p></blockquote><ol start="2"><li>echo：</li></ol><blockquote><p>追加内容至末尾：echo aaaaa &gt;&gt; 1.txt<br>覆盖原有内容：echo aaaaa &gt; 1.txt</p></blockquote><ol><li><p><strong>查看文件</strong></p></li><li><p>wc：统计文本中行数、字数、字符数</p></li></ol><p>2 cat：查看文件的全部内容， 适用于文件内容较小的文件</p><p>2 more： 翻页查看，适用于文件内容较大的文件</p><blockquote><p>回车多显示一行，空格就一页一页的走<br>:q  退出查看</p></blockquote><ol start="3"><li>less：翻页查看，more只能往后翻，less可以往前</li></ol><blockquote><p>回车多显示一行，空格就一页一页的走<br>:q  退出查看<br>b：回滚一屏<br>f：前滚一屏</p></blockquote><p>3 tail：从文件末尾开始查看</p><blockquote><p><strong>通常与  -f   参数连用，适合查看服务的实时动态的日志信息</strong><br>eg：<br>tail -f  ****.log<br>tail -200f  ****.log       (查看日志文件最后的两百行日志)</p></blockquote><p>4 head：查看文件的开头文件， 通常用于查看文件格式，内容模板样式</p><ol start="5"><li>grep：匹配文件内容</li></ol><blockquote><p>-c 仅列出文件中包含模式的行数。<br>-i 忽略模式中的字母大小写。<br>参数<br>    ^a 行首，搜寻以 a 开头的行<br>    ke$ 行尾，搜寻以 ke 结束的行</p></blockquote><blockquote><p>grep Setup 1.txt<br>grep setup 1.txt<br>grep -i setup 1.txt： -i  忽略大小写<br>grep -c setup 1.txt<br>grep -ic setup 1.txt<br>grep ^% 1.txt<br>grep -i c$ 1.txt<br>grep -i [a-z]ystem 1.txt</p></blockquote><ol><li><p><strong>删除文件：****rm；</strong>-f 强制删除，忽略不存在的文件，无需提示；-r 递归删除目录下的内容</p></li><li><p><strong>拷贝文件：</strong>cp；-i 覆盖文件前提示； -r 若给出的源文件是目录文件，则 cp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</p></li><li><p><strong>合并文件：</strong>cat  可以文件合并：cat  file1 file2 &gt; file3</p></li><li><p><strong>移动文件：</strong>mv；-i 默认选项，覆盖文件前提示； -f 强制覆盖，不提示；-b 当目标文件存在时，先进行备份在覆盖</p></li><li><p><strong>搜索文件：</strong>find 搜索路径 -name 搜索文件名；</p></li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">find</span> ~/ -name ab.txt<br><span class="hljs-built_in">find</span> ~/ -name ab\*    (模糊查询)<br></code></pre></td></tr></table></figure><h5 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h5><ol><li><p>创建目录：mkdir；-p 可以递归创建目录。同级的目录或文件，都不能重名</p></li><li><p>删除目录：<strong>rm；</strong>-f 强制删除，忽略不存在的文件，无需提示；-r 递归地删除目录下的内容</p></li><li><p>拷贝目录：cp；-i 覆盖文件前提示； -r 若给出的源文件是目录文件，则 cp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</p></li><li><p>移动目录：mv；-i 默认选项，覆盖文件前提示； -f 强制覆盖，不提示；-b 当目标文件存在时，先进行备份在覆盖</p></li><li><p>查看路径：pwd</p></li><li><p>树形结构查看目录：tree；需要安装tree包 sudo apt-get install tree</p></li><li><p>查看文件详细信息：stat；比ls更详细</p></li><li><p>查看目录：ls；-l  列出文件详细信息l(list)；-a  列出当前目录下所有文件及目录，包括隐藏的a(all)</p></li></ol><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">ls</span> -<span class="hljs-keyword">l</span>  # 列出可见文件详细信息<br><span class="hljs-keyword">ll</span>     # 列出可见文件详细信息  等效 <span class="hljs-keyword">ls</span> -<span class="hljs-keyword">l</span><br><span class="hljs-keyword">ls</span> -<span class="hljs-keyword">al</span> # 列出所有文件详细信息，包括隐藏文件<br><span class="hljs-keyword">ll</span> -<span class="hljs-keyword">a</span>  # 列出所有文件详细信息，包括隐藏文件 等效 <span class="hljs-keyword">ll</span> -<span class="hljs-keyword">a</span><br><span class="hljs-keyword">ll</span> -ah<br><span class="hljs-keyword">ll</span> dirname：列出dirname目录下的文件<br><br>占位符：* 匹配多个；?匹配一个<br><span class="hljs-keyword">ll</span> <span class="hljs-keyword">y</span>*<br><span class="hljs-keyword">ll</span> *.txt<br><br><span class="hljs-keyword">ll</span> <span class="hljs-keyword">y</span>*d*<br><span class="hljs-keyword">ll</span> <span class="hljs-keyword">y</span>??<br><span class="hljs-keyword">ll</span> /usr/bin # 列出指定路径的文件信息<br></code></pre></td></tr></table></figure><h5 id="连接："><a href="#连接：" class="headerlink" title="连接："></a><strong>连接：</strong></h5><blockquote><p>软连接：相当于win7快捷键<br>硬连接：相当于拷贝文件<br>区别：在删除链接时，是否删除源文件</p></blockquote><ol><li><p>创建软连接：ln -s file&#x2F;dir linkName</p></li><li><p>创建硬连接：ln file&#x2F;dir linkName</p></li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">## 创建一个软链接</span><br><span class="hljs-built_in">ln</span> -s readme.txt link.txt<br>lrwxrwxrwx. <span class="hljs-number">1</span> baby baby    <span class="hljs-number">4</span> Jun  <span class="hljs-number">9</span> <span class="hljs-number">02</span>:<span class="hljs-number">24</span> rm.txt -&gt; <span class="hljs-keyword">a</span>.py<br><span class="hljs-comment">## 创建一个硬链接</span><br>$ <span class="hljs-built_in">ln</span> ab.txt baby.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><h5 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h5><ol><li><p>chmod：设置文件对不同用户的权限，需要使用root用户</p></li><li><p>chgrp：修改组</p></li><li><p>chown：修改拥有者</p></li></ol><blockquote><p>chown 用户名 文件名|目录名 # 修改文件|目录的拥有者<br>chgrp -R 组名 文件名|目录名 # 递归修改文件|目录的组<br>chmod -R 755 文件名|目录名 # 递归修改文件权限<br>chmod 在设置权限时，可以简单地使用三个数字分别对应拥有者／ 组和其他用户的权限</p><h1 id="直接修改文件-目录的-读-写-执行-权限，但是不能精确到-拥有者-组-其他"><a href="#直接修改文件-目录的-读-写-执行-权限，但是不能精确到-拥有者-组-其他" class="headerlink" title="直接修改文件|目录的 读|写|执行 权限，但是不能精确到 拥有者|组|其他"></a>直接修改文件|目录的 读|写|执行 权限，但是不能精确到 拥有者|组|其他</h1><p>chmod +&#x2F;-rwx 文件名|目录名 # 一次性修改 拥有者 &#x2F; 组 权限</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># chmod</span><br>eg: -rw-rw-r--. 1 baby baby 0 May 31 16:02 a.py<br>需求：对于同组用户来说，仅仅可读，对于其他用户不可读不可写<br>    权限字符形式操作：<br>        <span class="hljs-comment"># chmod  g-w a.py      (表示对于同组u用户，删除可写权限)</span><br>        <span class="hljs-comment"># chmod  o-r a.py    (表示对于其他用户，删除读和写权限)</span><br>        <span class="hljs-comment"># chmod g-r-w a.py  (表示对于同组用户，删除读和写权限)</span><br>    <br>    权限数字形式权限：<br>        <span class="hljs-comment"># chmod 664  (表示对拥有着可读可写，同组用户可读可写，其他用户可读)</span><br><br>    问题：如果针对一个目录，设置权限呢？且目录中有许多文件，这些文件都需要同样的权限设置。<br>        -R, --recursive  递归<br>        <span class="hljs-comment"># chmod -R 664 /opt/softwares</span><br><br><span class="hljs-comment"># chown</span><br>    <span class="hljs-built_in">chown</span> baby /home/a.py<br><span class="hljs-comment"># chgrp</span><br>    <span class="hljs-built_in">chgrp</span> baby /home/a.py<br>    经测，两个命令都要运行，才会改变(不一定)<br><span class="hljs-comment"># 如果针对目录：递归</span><br>    <span class="hljs-built_in">chown</span> -R baby /opt/softwares<br>    <span class="hljs-built_in">chgrp</span> -R baby /opt/softwares<br><span class="hljs-comment"># 将/home/a.py文件的所属用户和所属组改为senior用户和senior组</span><br>    可以使用一个命令完成：<br>    <span class="hljs-built_in">chown</span> senior:senior /home/a.py<br>    senior:senior: 第一个senior代表用户，第二个senior代表组<br></code></pre></td></tr></table></figure><h5 id="打包与压缩"><a href="#打包与压缩" class="headerlink" title="打包与压缩"></a>打包与压缩</h5><ol><li><strong>tar</strong></li></ol><blockquote><p>c 生成档案文件，创建打包文件<br>x 解开档案文件<br>v 列出归档解档的详细过程，显示进度<br>f 指定档案文件名称，f 后面一定是 .tar 文件，所以必须放选项最后，其他选项顺序可以随意<br>z 可以调用gzip进行压缩</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">tar -cvf 打包文件<span class="hljs-string">.tar</span> 被打包的文件／路径 <span class="hljs-comment"># 打包文件</span><br>tar -xvf 打包文件<span class="hljs-string">.tar</span> <span class="hljs-comment"># 解包文件</span><br>tar -zcvf 打包文件<span class="hljs-string">.tar.gz</span> 要被压缩的文件/路径   <span class="hljs-comment"># 压缩文件</span><br>tar -zxvf filename.tar.gz                     <span class="hljs-comment"># 解压缩文件</span><br>tar -zxvf filename.tar.gz -C 目标路径         <span class="hljs-comment"># 解压缩到指定路径；选项-C 解压缩到指定目录，注意：要解压缩的目录必须存在 </span><br></code></pre></td></tr></table></figure><ol><li><strong>zip</strong></li></ol><p><strong>zip</strong></p><blockquote><p>zip -q -r html.zip &#x2F;home&#x2F;html # 将 &#x2F;home&#x2F;html&#x2F; 这个目录下所有文件和文件夹打包为当前目录下的 html.zip<br>zip -q -r html.zip * # 如果在我们在 &#x2F;home&#x2F;html 目录下<br>zip -dv cp.zip a.c #从压缩文件 cp.zip 中删除文件 a.c</p></blockquote><p><strong>unzip</strong></p><blockquote><p>unzip -l abc.zip #查看压缩文件中包含的文件<br>unzip abc.zip -d&lt;目录&gt; # 指定文件解压缩后所要存储的目录</p></blockquote><p><strong>查看命令的路径</strong></p><blockquote><p>whereis java</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用户管理</title>
    <link href="/blog/2024/07/26/linux/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/"/>
    <url>/blog/2024/07/26/linux/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a><strong>创建用户</strong></h3><ol><li><p>useradd -m -g 组 用户名：创建用户</p></li><li><p>-m 会自动创建用户家目录</p></li><li><p>-g 会指定用户所在组，否认会创建一个用户同名的组</p></li><li><p>passwd 用户名：创建用户密码</p></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">useradd -m -<span class="hljs-selector-tag">g</span> lgw leegw<br>passwd leegw<br>更改用户 leegw 的密码 <br><span class="hljs-number">1</span>、密码少于 <span class="hljs-number">8</span> 个字符<br><span class="hljs-number">2</span>、密码不能包含用户名<br><span class="hljs-number">3</span>、一次命令允许连续输入<span class="hljs-number">4</span>次，否则，超出服务重试的最多次数<br></code></pre></td></tr></table></figure><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a><strong>删除用户</strong></h3><ol><li>userdel -r 用户名；-r选项会自动删除用户家目录</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><br><span class="hljs-attribute">userdel</span> leegw<br><span class="hljs-attribute">userdel</span> -r leegw   # 同步删除 家目录<br><span class="hljs-attribute">userdel</span>: user ligw is currently used by process <span class="hljs-number">15288</span><br><span class="hljs-attribute">ps</span> -ef |grep <span class="hljs-number">15288</span><br><span class="hljs-attribute">kill</span> - <span class="hljs-number">9</span> <span class="hljs-number">15288</span><br></code></pre></td></tr></table></figure><h3 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h3><ol><li><p>id [用户名] 查看用户 UID 和 GID 信息</p></li><li><p>who 查看当前所有登录的用户列表</p></li><li><p>whoami 查看当前登录用户的账户名</p></li><li><p>&#x2F;etc&#x2F;passwd 文件存放的是用户的信息，由 6 个分号组成的 7 个信息，分别是</p></li><li><p>•用户名</p></li><li><p>•密码（x，表示加密的密码）</p></li><li><p>•UID（用户标识）</p></li><li><p>•GID（组标识）</p></li><li><p>•用户全名或本地帐号</p></li><li><p>•家目录</p></li><li><p>•登录使用的 Shell，就是登录之后，使用的终端命令，ubuntu 默认是 dash</p></li><li><p>cat &#x2F;etc&#x2F;passwd  #查看所有用户信息</p></li></ol><h3 id="修改用户usermod"><a href="#修改用户usermod" class="headerlink" title="修改用户usermod"></a>修改用户usermod</h3><p>usermod 可以用来设置 用户 的 主组 ／ 附加组 和 登录 Shell，命令格式如下：</p><ul><li><p>主组：通常在新建用户时指定，在 etc&#x2F;passwd 的第 4 列 GID 对应的组</p></li><li><p>附加组：在 etc&#x2F;group 中最后一列表示该组的用户列表，用于指定 用户的附加权限</p></li><li><p>提示：设置了用户的附加组之后，需要重新登录才能生效！</p></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">usermod -g 组 用户名 <span class="hljs-comment"># 修改用户的主组（passwd 中的 GID）</span><br>usermod -G 组 用户名 <span class="hljs-comment"># 修改用户的附加组</span><br>usermod -s <span class="hljs-regexp">/bin/</span>bash 用户名 <span class="hljs-comment"># 修改用户登录 Shell</span><br></code></pre></td></tr></table></figure><p><strong>创建用户 &#x2F; 删除用户 &#x2F; 修改其他用户密码 的终端命令都需要通过 su</strong></p><h3 id="管理用户组"><a href="#管理用户组" class="headerlink" title="管理用户组"></a><strong>管理用户组</strong></h3><blockquote><p>groupadd 组名 #添加组<br>groupdel 组名 #删除组<br>cat &#x2F;etc&#x2F;group #确认组信息<br>groupmod 选项 用户组 # 修改组</p></blockquote><h3 id="root用户"><a href="#root用户" class="headerlink" title="root用户"></a><strong>root用户</strong></h3><p>root 账号通常 用于系统的维护和管理，对操作系统的所有资源 具有所有访问权限</p><p>不推荐 直接使用 root 账号登录系统</p><p>在 Linux 安装的过程中，系统会自动创建一个用户账号，而这个默认的用户就称为“标准用户”</p><p>sudo</p><p>•su 是 substitute user 的缩写，表示 使用另一个用户的身份</p><p>•sudo是linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部的root命令的一个工具</p><p>•sudo 命令用来以其他身份来执行命令，预设的身份为 root </p><p>•用户使用 sudo 时，必须先输入密码，之后有 5 分钟的有效期限，超过期限则必须重新输入密码</p><p>• 若其未经授权的用户企图使用 sudo，则会发出警告邮件给管理</p><h6 id="设置普通用户的sudo无密码登录权限"><a href="#设置普通用户的sudo无密码登录权限" class="headerlink" title="设置普通用户的sudo无密码登录权限"></a><strong>设置普通用户的sudo无密码登录权限</strong></h6><blockquote><p>1.** <strong><strong># vi &#x2F;etc&#x2F;sudoers</strong><br>2.在第一行编辑：**用户名 ALL&#x3D;(root)NOPASSWD:ALL</strong><br>eg：  baby ALL&#x3D;(root)NOPASSWD:ALL</p></blockquote><h3 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a><strong>切换用户</strong></h3><ol><li><p>su - 用户名：切换用户，并且切换到家目录；不加-，则不会切换到家目录，保持原来路径不变</p></li><li><p>su 不接用户名，可以切换到 root，但是不推荐使用，因为不安全</p></li><li><p>su - 用户名：切换到新用户</p></li><li><p>su：切换到管理员</p></li></ol><blockquote><p>1.root用户切换到普通用户，不需要密码<br>2.普通用户切换到root用户，需要密码</p></blockquote><h3 id="修改用户的文件权限"><a href="#修改用户的文件权限" class="headerlink" title="修改用户的文件权限"></a>修改用户的文件权限</h3><ol><li><p>chmod：设置文件对不同用户的权限，需要使用root用户</p></li><li><p>chgrp：修改组</p></li><li><p>chown：修改拥有者</p></li></ol><blockquote><p>chown 用户名 文件名|目录名 # 修改文件|目录的拥有者<br>chgrp -R 组名 文件名|目录名 # 递归修改文件|目录的组<br>chmod -R 755 文件名|目录名 # 递归修改文件权限<br>chmod 在设置权限时，可以简单地使用三个数字分别对应拥有者／ 组和其他用户的权限</p><h1 id="直接修改文件-目录的-读-写-执行-权限，但是不能精确到-拥有者-组-其他"><a href="#直接修改文件-目录的-读-写-执行-权限，但是不能精确到-拥有者-组-其他" class="headerlink" title="直接修改文件|目录的 读|写|执行 权限，但是不能精确到 拥有者|组|其他"></a>直接修改文件|目录的 读|写|执行 权限，但是不能精确到 拥有者|组|其他</h1><p>chmod +&#x2F;-rwx 文件名|目录名 # 一次性修改 拥有者 &#x2F; 组 权限</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># chmod</span><br>eg: -rw-rw-r--. 1 baby baby 0 May 31 16:02 a.py<br>需求：对于同组用户来说，仅仅可读，对于其他用户不可读不可写<br>    权限字符形式操作：<br>        <span class="hljs-comment"># chmod  g-w a.py      (表示对于同组u用户，删除可写权限)</span><br>        <span class="hljs-comment"># chmod  o-r a.py    (表示对于其他用户，删除读和写权限)</span><br>        <span class="hljs-comment"># chmod g-r-w a.py  (表示对于同组用户，删除读和写权限)</span><br>    <br>    权限数字形式权限：<br>        <span class="hljs-comment"># chmod 664  (表示对拥有着可读可写，同组用户可读可写，其他用户可读)</span><br><br>    问题：如果针对一个目录，设置权限呢？且目录中有许多文件，这些文件都需要同样的权限设置。<br>        -R, --recursive  递归<br>        <span class="hljs-comment"># chmod -R 664 /opt/softwares</span><br><br><span class="hljs-comment"># chown</span><br>    <span class="hljs-built_in">chown</span> baby /home/a.py<br><span class="hljs-comment"># chgrp</span><br>    <span class="hljs-built_in">chgrp</span> baby /home/a.py<br>    经测，两个命令都要运行，才会改变(不一定)<br><span class="hljs-comment"># 如果针对目录：递归</span><br>    <span class="hljs-built_in">chown</span> -R baby /opt/softwares<br>    <span class="hljs-built_in">chgrp</span> -R baby /opt/softwares<br><span class="hljs-comment"># 将/home/a.py文件的所属用户和所属组改为senior用户和senior组</span><br>    可以使用一个命令完成：<br>    <span class="hljs-built_in">chown</span> senior:senior /home/a.py<br>    senior:senior: 第一个senior代表用户，第二个senior代表组<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>系统管理</title>
    <link href="/blog/2024/07/26/linux/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    <url>/blog/2024/07/26/linux/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">/etc/profile：配置全局环境变量，所有用户都可以用<br>用户家目录/.bash_profile 配置环境变量，只对当前用户生效<br>文件的path环境变量中多个配置用:分开，最后加上. 代表当前路径下文件可直接调用，而不需要加上./<br>比如配置jdk<br>     <span class="hljs-built_in">export</span>    <span class="hljs-attribute">JAVA_HOME</span>=/opt/jdk1.8.0_281<br>     <span class="hljs-built_in">export</span>    <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$JAVA_HOME</span>/bin:$PATH:.<br></code></pre></td></tr></table></figure><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><h4 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h4><ol><li>top：动态显示运行中的进程并且排序</li><li>ps <ol><li>ps aux：查看进程的详细状况<ol><li>a 显示终端上的所有进程，包括其他用户的进程</li><li>u 显示进程的详细状态</li><li>x 显示没有控制终端的进程</li></ol></li><li>ps -ef</li></ol></li></ol><h4 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h4><ol><li>kill：kill [-9] 进程代号 终止指定代号的进程，-9 表示强行终止 </li><li>pkill：按照进程名杀死进程。pkill java：杀掉所有java进程；是按照进程名称来杀死进程 </li><li>提示： 使用 kill 命令时，最好只终止由当前用户开启的进程，而不要终止 root 身份开启的进程，否则可能导致系统崩溃要退出 </li><li>批量删除进程:  kill -9 <code>ps -ef | grep *** | awk &#39;&#123;print $2&#125;&#39;</code></li><li>批量kill：ps auxww | grep ‘gunicorn’ | awk ‘{print $2}’ | xargs kill -9 </li><li>以树状图形式查看pid号，杀掉主进程，所有进程都杀掉：pstree -ap | grep gunicorn<br><img src="/blog/images/1722580916435.png"></li></ol><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><h4 id="方式1：service-–-7-3版本之前"><a href="#方式1：service-–-7-3版本之前" class="headerlink" title="方式1：service – 7.3版本之前"></a>方式1：service – 7.3版本之前</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-number">1</span>.查看防火墙的状态<br>[baby<span class="hljs-variable">@localhost</span> etc]<span class="hljs-variable">$ </span>sudo service iptables status<br><span class="hljs-symbol">iptables:</span> Firewall is not running.<br><br><span class="hljs-number">2</span>.关闭防火墙：<br>[baby<span class="hljs-variable">@localhost</span> etc]<span class="hljs-variable">$ </span>sudo service iptables stop<br><br><span class="hljs-number">3</span>.启动防火墙：<br>[baby<span class="hljs-variable">@localhost</span> etc]<span class="hljs-variable">$ </span>sudo service iptables start<br><br><span class="hljs-number">4</span>.重启防火墙：<br>[baby<span class="hljs-variable">@localhost</span> etc]<span class="hljs-variable">$ </span>sudo service iptables restart<br><br><span class="hljs-number">5</span>.永久性设置防火墙关闭|开启(意思就是设置开启启动|关闭防火墙)：<br><span class="hljs-variable">$ </span>sudo chkconfig iptables off|on<br></code></pre></td></tr></table></figure><h4 id="方式2：systemctl-–-7-3版本之后"><a href="#方式2：systemctl-–-7-3版本之后" class="headerlink" title="方式2：systemctl – 7.3版本之后"></a>方式2：systemctl – 7.3版本之后</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">查看防火墙状态：firewall-cmd <span class="hljs-attr">--state</span><br>关闭防火墙：systemctl <span class="hljs-selector-tag">stop</span> firewalld<span class="hljs-selector-class">.service</span><br>禁止防火墙开机启动：systemctl disable firewalld.service<br></code></pre></td></tr></table></figure><h4 id="防火墙2-SELINUX-禁用"><a href="#防火墙2-SELINUX-禁用" class="headerlink" title="防火墙2-SELINUX 禁用"></a>防火墙2-SELINUX 禁用</h4><ol><li><p>第一步：编辑</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">vi  /etc/sysconfig/selinux<br><span class="hljs-attribute">SELINUX</span>=disabled<br>或者：<br>vi /etc/selinux<span class="hljs-built_in">/config</span><br><span class="hljs-built_in"></span><span class="hljs-attribute">SELINUX</span>=disabled<br>注意：不能改错，要不然重启不了服务器<br></code></pre></td></tr></table></figure></li><li><p>第二步重启服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> reboot<br></code></pre></td></tr></table></figure></li></ol><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ruby">- 查看什么系统<br>[baby<span class="hljs-variable">@localhost</span> ~]<span class="hljs-variable">$ </span>uname  <br><span class="hljs-title class_">Linux</span><br>- 可显示电脑以及操作系统的相关信息。<br>uname -a <br>- 查看内核版本<br>[baby<span class="hljs-variable">@localhost</span> ~]<span class="hljs-variable">$ </span>uname -r    <br><span class="hljs-number">2.6</span>.<span class="hljs-number">32</span>-<span class="hljs-number">358</span>.el6.x86_64<br>- 查看cpu信息<br>[baby<span class="hljs-variable">@localhost</span> ~]<span class="hljs-variable">$ </span>cat /<span class="hljs-built_in">proc</span>/cpuinfo   <br>- 查看内存信息<br>[baby<span class="hljs-variable">@localhost</span> ~]<span class="hljs-variable">$ </span>cat /<span class="hljs-built_in">proc</span>/meminfo   <br><br>cat /<span class="hljs-built_in">proc</span>/version<span class="hljs-string">&quot;,说明正在运行的内核版本。  </span><br><span class="hljs-string">cat /etc/issue&quot;</span>, 显示的是发行版本信息<br></code></pre></td></tr></table></figure><h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><ul><li>查看剩余磁盘空间：df<figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tcl">-a ：列出所有的文件系统，包括系统特有的 /<span class="hljs-keyword">proc</span> 等文件系统；<br>-k ：以<span class="hljs-title"> KBytes</span> 的容量显示各文件系统；<br>-m ：以<span class="hljs-title"> MBytes</span> 的容量显示各文件系统；<br>-h ：以人们较易阅读的<span class="hljs-title"> GBytes,</span> MBytes,<span class="hljs-title"> KBytes</span> 等格式自行显示；<br>-H ：以<span class="hljs-title"> M=1000K</span> 取代<span class="hljs-title"> M=1024K</span> 的进位方式；<br>-T ：显示文件系统类型, 连同该<span class="hljs-title"> partition</span> 的<span class="hljs-title"> filesystem</span> 名称 (例如<span class="hljs-title"> ext3)</span> 也列出；<br>-i ：不用硬盘容量，而以<span class="hljs-title"> inode</span> 的数量来显示<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h: 易读方式打印<br><span class="hljs-built_in">df</span> -lh<br><br><span class="hljs-built_in">df</span> -aT       <span class="hljs-comment">#将系统内的所有特殊文件格式及名称都列出来</span><br><span class="hljs-built_in">df</span> -h /etc   <span class="hljs-comment">#将 /etc 底下的可用的磁盘容量以易读的容量格式显示</span><br><span class="hljs-built_in">df</span> -hi: 打印inode。操作系统的文件由两部分组成，数据部分和名称部分；数据部分就是内容，inode就是名称部分，操作系统对文件的个数和容量都有上限，其中一个满了就会不可写；<br><br></code></pre></td></tr></table></figure><ul><li>显示目录下文件大小：du<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">显示目录下的文件大小。 检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。<br><span class="hljs-built_in">du</span> -sh /home/baby     预估在某个路径下使用的磁盘空间大小<br><span class="hljs-built_in">du</span> -sm /*    <span class="hljs-comment">#检查根目录底下每个目录所占用的容量</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="内存相关"><a href="#内存相关" class="headerlink" title="内存相关"></a>内存相关</h3><ul><li>看系统内存使用情况 free<figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost baby]<span class="hljs-comment"># free -m</span><br>             total       used       free     shared    buffers     cached<br>Mem:          <span class="hljs-number"> 995 </span>      <span class="hljs-number"> 884 </span>      <span class="hljs-number"> 110 </span>        <span class="hljs-number"> 0 </span>      <span class="hljs-number"> 149 </span>       385<br>-/+ buffers/cache:       <span class="hljs-number"> 349 </span>       646<br>Swap:        <span class="hljs-number"> 4095 </span>        <span class="hljs-number"> 0 </span>      4095<br></code></pre></td></tr></table></figure></li></ul><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><ol><li>监控TCP&#x2F;IP网络端口<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs makefile">netstat是控制台命令,是一个监控TCP/IP网络的非常有用的工具，它可以显示路由表、实际的网络连接以及每一个网络接口设<br>备的状态信息。Netstat用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况。<br><br><span class="hljs-section">常用netstat相关命令:</span><br>1、列出所有端口 <span class="hljs-comment">#netstat -a</span><br>2、列出所有 tcp 端口 <span class="hljs-comment">#netstat -at</span><br>3、列出所有 udp 端口 <span class="hljs-comment">#netstat -au</span><br>4、只显示监听端口 <span class="hljs-comment">#netstat -l</span><br>5、只列出所有监听 tcp 端口 <span class="hljs-comment">#netstat -lt</span><br>6、只列出所有监听 udp 端口 <span class="hljs-comment">#netstat -lu</span><br>7、列出所有监听 UNIX 端口 <span class="hljs-comment">#netstat -lx</span><br>8、显示所有端口的统计信息 <span class="hljs-comment">#netstat -s</span><br></code></pre></td></tr></table></figure></li><li>查看网卡的信息<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@localhost baby]# cd /etc/sysconfig/network-scripts <br>[root@localhost network-scripts]# ls<br>ifcfg-eth0   ifdown-isdn    ifup-aliases  ifup-plusb     init.ipv6-global<br>ifcfg-lo     ifdown-post    ifup-bnep     ifup-post      net.hotplug<br>ifdown       ifdown-ppp     ifup-eth      ifup-ppp       network-functions<br>ifdown-bnep  ifdown-routes  ifup-ippp     ifup-routes    network-functions-ipv6<br>ifdown-eth   ifdown-sit     ifup-ipv6     ifup-sit<br>ifdown-ippp  ifdown-tunnel  ifup-isdn     ifup-tunnel<br>ifdown-ipv6  ifup           ifup-plip     ifup-wireless<br>[root@localhost network-scripts]# cat ifcfg-eth0 <br><span class="hljs-attribute">DEVICE</span>=eth0<br><span class="hljs-attribute">TYPE</span>=Ethernet<br><span class="hljs-attribute">UUID</span>=57d4c2c9-9e9c-48f8-a654-8e5bdbadafb8<br><span class="hljs-attribute">ONBOOT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">NM_CONTROLLED</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">BOOTPROTO</span>=none<br><span class="hljs-attribute">DEFROUTE</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">IPV4_FAILURE_FATAL</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">IPV6INIT</span>=<span class="hljs-literal">no</span><br><span class="hljs-attribute">NAME</span>=<span class="hljs-string">&quot;System eth0&quot;</span><br><span class="hljs-attribute">HWADDR</span>=00:0C:29:CD:79:8C<br><span class="hljs-attribute">IPADDR</span>=192.168.202.110<br><span class="hljs-attribute">PREFIX</span>=24<br><span class="hljs-attribute">GATEWAY</span>=192.168.202.110<br><span class="hljs-attribute">LAST_CONNECT</span>=1559242361<br>[root@localhost network-scripts]# cat ifcfg-lo<br><span class="hljs-attribute">DEVICE</span>=lo<br><span class="hljs-attribute">IPADDR</span>=127.0.0.1<br><span class="hljs-attribute">NETMASK</span>=255.0.0.0<br><span class="hljs-attribute">NETWORK</span>=127.0.0.0<br><span class="hljs-comment"># If you&#x27;re having problems with gated making 127.0.0.0/8 a martian,</span><br><span class="hljs-comment"># you can change this to something else (255.255.255.255, for example)</span><br><span class="hljs-attribute">BROADCAST</span>=127.255.255.255<br><span class="hljs-attribute">ONBOOT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">NAME</span>=loopback<br></code></pre></td></tr></table></figure></li></ol><h3 id="关机重启"><a href="#关机重启" class="headerlink" title="关机重启"></a>关机重启</h3><ol><li>shutdown 命令可以 安全 关闭 或者 重新启动系统<figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">选项 -r 重新启动</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">提示：</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">•不指定选项和参数，默认表示 <span class="hljs-number">1</span> 分钟之后 关闭电脑</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">•远程维护服务器时，最好不要关闭系统，而应该重新启动系统</span><br></code></pre></td></tr></table></figure></li></ol><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit">$ <span class="hljs-built_in">shutdown</span> -r now <span class="hljs-meta"># 重新启动操作系统，其中 now 表示现在</span><br>$ <span class="hljs-built_in">shutdown</span> now <span class="hljs-meta"># 立刻关机，其中 now 表示现在</span><br>$ <span class="hljs-built_in">shutdown</span> <span class="hljs-number">20</span>:<span class="hljs-number">25</span> <span class="hljs-meta"># 系统在今天的 20:25 会关机</span><br>$ <span class="hljs-built_in">shutdown</span> +<span class="hljs-number">10</span> <span class="hljs-meta"># 系统再过十分钟后自动关机</span><br>$ <span class="hljs-built_in">shutdown</span> -c <span class="hljs-meta"># 取消之前指定的关机计</span><br><br></code></pre></td></tr></table></figure><ol><li>halt 关机</li><li>reboot 重启</li></ol><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><ul><li><p><strong>显示当前的日期</strong></p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">[baby@localhost ~]$** date**     </span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Sun</span> <span class="hljs-title class_">Jun</span>  <span class="hljs-number">9</span> <span class="hljs-number">13</span>:<span class="hljs-number">52</span>:<span class="hljs-number">58</span> <span class="hljs-variable constant_">EDT</span> <span class="hljs-number">2019</span></span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">[baby@localhost ~]$ **date -R  **  显示当前的日期和时区</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Sun</span>, <span class="hljs-number">09</span> <span class="hljs-title class_">Jun</span> <span class="hljs-number">2019</span> <span class="hljs-number">13</span>:<span class="hljs-number">53</span>:<span class="hljs-number">03</span> -<span class="hljs-number">0400</span></span><br></code></pre></td></tr></table></figure></li><li><p><strong>设置时间（需要root用户）</strong></p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">[root@localhost baby]# **date -s <span class="hljs-number">2019</span>-<span class="hljs-number">06</span>-<span class="hljs-number">10</span>**</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Mon</span> <span class="hljs-title class_">Jun</span> <span class="hljs-number">10</span> <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> <span class="hljs-variable constant_">EDT</span> <span class="hljs-number">2019</span></span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">[root@localhost baby]# **date -s <span class="hljs-number">14</span>:<span class="hljs-number">42</span>:<span class="hljs-number">10</span>**</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Mon</span> <span class="hljs-title class_">Jun</span> <span class="hljs-number">10</span> <span class="hljs-number">14</span>:<span class="hljs-number">42</span>:<span class="hljs-number">10</span> <span class="hljs-variable constant_">EDT</span> <span class="hljs-number">2019</span></span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">[root@localhost baby]# date</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Mon</span> <span class="hljs-title class_">Jun</span> <span class="hljs-number">10</span> <span class="hljs-number">14</span>:<span class="hljs-number">42</span>:<span class="hljs-number">11</span> <span class="hljs-variable constant_">EDT</span> <span class="hljs-number">2019</span></span><br></code></pre></td></tr></table></figure></li><li><p><strong>显示2015年的日历表</strong></p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">&gt; [baby<span class="hljs-variable">@localhost</span> ~]<span class="hljs-variable">$ </span>**cal <span class="hljs-number">2015</span>   **<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>远程操作</title>
    <link href="/blog/2024/07/26/linux/%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/"/>
    <url>/blog/2024/07/26/linux/%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<ol start="2"><li><strong>ifconfig</strong></li></ol><blockquote><p>ifconfig 可以查看／配置计算机当前的网卡配置信息<br>   $ ifconfig # 查看网卡配置信息<br>   $ ifconfig | grep inet # 查看网卡对应的 IP 地址<br>提示：一台计算机中有可能会有一个 物理网卡 和 多个虚拟网卡，在 Linux 中物理网卡的名字通常以 ensXX 表示</p></blockquote><ol><li><strong>ping</strong></li></ol><blockquote><p>$ ping IP地址 # 检测到目标主机是否连接正常<br>$ ping 127.0.0.1 # 检测本地网卡工作正常<br>ping 一般用于检测当前计算机到目标计算机之间的网络 是否通畅，数值越大，速度越慢<br>原理：网络上的机器都有 唯一确定的 IP 地址，我们给目标 IP 地址发送一个数据包，对方就要返回一个数据包，根据返回的数据包以及时间，我们可以确定目标主机的存在</p></blockquote><ol><li><p><strong>ssh远程连接</strong></p></li><li><p><strong>主机名和ip地址的映射</strong></p></li></ol><blockquote><p>修宿主机hosts 文件，添加ip地址和域名映射 。linux 也存在hosts 文件。<br>win：C:\Windows\System32\drivers\etc\hosts     linux：&#x2F;etc&#x2F;hosts<br>添加：<br>192.168.50.129  vmware.lnx01<br>192.168.50.128  vmware.lnx02<br>使用域名登录<br>ssh <a href="mailto:&#x72;&#x6f;&#111;&#x74;&#x40;&#118;&#x6d;&#119;&#97;&#x72;&#x65;&#x2e;&#x6c;&#x6e;&#120;&#x30;&#49;">&#x72;&#x6f;&#111;&#x74;&#x40;&#118;&#x6d;&#119;&#97;&#x72;&#x65;&#x2e;&#x6c;&#x6e;&#120;&#x30;&#49;</a></p></blockquote><ol><li><strong>修改linux主机名</strong></li></ol><blockquote><p>Linux系统安装好后，都会有默认的主机名， CentOS系统默认的主机名是localhost.localdomain，为了便于使用，我们常常需要修改主机名<br>1.显示主机名称： hostname  |  uname -n | hostnamectl<centos7><br>2.设置主机名称：hostname 名称<br>     注意：这种方式设置主机名称，仅仅在当前使用没有问题，当机器重启之后，主机名称会变化。<br>     原因：在linux系统中，系统配置的信息都是来自于文件中，这种设置方式没有写入文件中<br>3.永久设置主机名称：      cat &#x2F;etc&#x2F;system-release: 查看服务器的linux版本<br>      方式1：hostnamectl set-hostname vm_lnx  #修改主机名, 重新连接主机即可看到主机名发生了改变，不需要重启机器<br>      方式2：centos7.3 前的系统<br>             1：cat &#x2F;etc&#x2F;sysconfig&#x2F;network   (cat  文件名： 读取文件内容)<br>             2    vi &#x2F;etc&#x2F;sysconfig&#x2F;network<br>             3    编辑hostname&#x3D;主机名<br>             4    重启系统：关机：# halt     |      重启：reboot &#x2F; init6(安全重启) &#x2F; shutdown<br>    方式3：centos7.3 后的系统修改&#x2F;etc&#x2F;hostname 文件内容，并重启生效</p><p>注意：centos上再重命名主机名字的时候， 主机名字不要使用  下划线_,   会出现很多错误</p></blockquote><ol><li><strong>简单连接</strong></li></ol><blockquote><p>ssh [-p port]<br>•user 是在远程机器上的用户名，如果不指定的话默认为当前用户<br>•remote 是远程机器的地址，可以是 IP／域名，或者是 后面会提到的别名<br>•port 是 SSH Server 监听的端口，如果不指定，就为默认值 22<br>使用 exit 退出当前用户的登录<br>SSH 服务器的端口号很有可能不是 22，如果遇到这种情况就需要使用 -p 选项，指定正确的端口号，否则无法正常连接到服务器</p></blockquote><ol><li><strong>免密码连接</strong></li></ol><blockquote><ol><li>生成钥匙，一路回车：ssh-keygen</li><li>配置公钥到服务器：<br>  a. ssh-copy-id -p port user@remote，可以让远程服务器记住我们的公钥<br>  b. win不支持a命令，可以手动配置：将生成的id_rsa.pub内容拷贝到authorized_keys文件中</li></ol></blockquote><ol><li><strong>scp远程拷贝</strong></li></ol><blockquote><p>远程复制：<br>      scp file root@ip:dir 上传<br>      scp root@ip:file &#x2F;dir 下载<br>选项<br>      -r 若给出的源文件是目录文件，则 scp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名<br>      -P 若远程 SSH 服务器的端口不是 22，需要使用大写字母 -P 选项指定端</p></blockquote><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment"># 把本地当前目录下的 01.py 文件 复制到 远程 家目录下的 Desktop/01.py</span><br><span class="hljs-comment"># 注意：`:` 后面的路径如果不是绝对路径，则以用户的家目录作为参照路径</span><br>scp -P port <span class="hljs-number">01</span>.py user<span class="hljs-variable">@remote</span><span class="hljs-symbol">:Desktop/</span><span class="hljs-number">01</span>.py<br>scp -P port user<span class="hljs-variable">@remote</span><span class="hljs-symbol">:Desktop/</span><span class="hljs-number">01</span>.py <span class="hljs-number">01</span>.py <span class="hljs-comment"># 把远程 家目录下的 Desktop/01.py 文件 复制到 本地当前目录下的 01.py</span><br>scp -r demo user<span class="hljs-variable">@remote</span><span class="hljs-symbol">:/opt/yyang25</span>  <span class="hljs-comment"># 加上 -r 选项可以传送文件夹,把当前目录下的 demo 文件夹 复制到 远程 家目录下的 /opt/yyang25</span><br>scp -r user<span class="hljs-variable">@remote</span><span class="hljs-symbol">:Desktop</span> demo         <span class="hljs-comment"># 把远程 家目录下的 Desktop 复制到 当前目录下的 demo 文件夹</span><br><br>scp jdk<span class="hljs-number">-11.0</span>.<span class="hljs-number">12_</span>linux-x64_bin.tar.gz <span class="hljs-title class_">SERVER_USERNAME</span><span class="hljs-variable">@HOSTNAME_OR_IP</span><span class="hljs-symbol">:</span>.<br><span class="hljs-symbol">:</span>后面跟路径<br><span class="hljs-symbol">example:</span> scp <span class="hljs-symbol">D:</span>\<span class="hljs-title class_">Users</span>\yyang25\<span class="hljs-title class_">Downloads</span>\test.apk root<span class="hljs-variable">@182</span>.<span class="hljs-number">92.164</span>.<span class="hljs-number">32</span><span class="hljs-symbol">:</span>. --&gt;.表示上传到home目录<br><span class="hljs-symbol">example:</span> scp <span class="hljs-symbol">D:</span>\<span class="hljs-title class_">Users</span>\yyang25\<span class="hljs-title class_">Downloads</span>\test.apk root<span class="hljs-variable">@182</span>.<span class="hljs-number">92.164</span>.<span class="hljs-number">32</span><span class="hljs-symbol">:/opt/yyang25/software</span> --&gt;<span class="hljs-symbol">:</span>后面跟路径<br><span class="hljs-symbol">example:</span> scp  root<span class="hljs-variable">@182</span>.<span class="hljs-number">92.164</span>.<span class="hljs-number">32</span><span class="hljs-symbol">:/opt/yyang25/software/test</span>.apk <span class="hljs-symbol">D:</span>\<span class="hljs-title class_">Users</span>\yyang25\<span class="hljs-title class_">Downloads</span> --&gt;从远程拉取文件<br><span class="hljs-symbol">example:</span> scp  root<span class="hljs-variable">@182</span>.<span class="hljs-number">92.164</span>.<span class="hljs-number">32</span><span class="hljs-symbol">:</span>./test.apk root<span class="hljs-variable">@182</span>.<span class="hljs-number">92.164</span>.<span class="hljs-number">32</span><span class="hljs-symbol">:</span>. --&gt;两个服务器之间推拉文件; 注意：需要在服务器配置公钥，比如scp a b; 要把b服务器home目录下.ssh目录中把公钥复制到a服务器下.ssh/目录下的auth..keys文件中<br></code></pre></td></tr></table></figure><ol><li><strong>Rsync远程数据同步</strong></li></ol><p>Rsync（remote synchronize）是一个远程数据同步工具，可通过LAN&#x2F;WAN快速同步多台主机间的文件。Rsync使用所谓的“Rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。</p><p>rsync [OPTION]… SRC DEST</p><p>rsync [OPTION]… SRC [USER@]HOST:DEST</p><p>rsync [OPTION]… [USER@]HOST:SRC DEST</p><p>源目录加了斜线，效果就是将该目录下的内容传输到目标目录下。</p><p>源目录不加斜线，效果就是将该目录传输到目标目录下。</p><p>目标目录如果不存在，会自动创建目标目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rsync -avlK ./d2 ./d3 <span class="hljs-comment">#同步目录</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件安装</title>
    <link href="/blog/2024/07/26/linux/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    <url>/blog/2024/07/26/linux/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>Linux下的软件包可细分为两种，分别是</p><p><strong>源码包</strong></p><p><strong>二进制包</strong></p><p>二进制包是 Linux 下默认的软件安装包，因此二进制包又被称为默认安装软件包。</p><h6 id="目前主要有以下-2-大主流的二进制包管理系统："><a href="#目前主要有以下-2-大主流的二进制包管理系统：" class="headerlink" title="目前主要有以下 2 大主流的二进制包管理系统："></a>目前主要有以下 2 大主流的二进制包管理系统：</h6><p><strong>RPM 包管理系统</strong></p><p><strong>DPKG 包管理系统</strong></p><p><img src="/blog/images/WEBRESOURCE39cc36d8b1ca8730d1710b7a43f39378%E6%88%AA%E5%9B%BE.png"></p><p><strong>yum</strong></p><p><strong>apt</strong></p><p><img src="/blog/images/WEBRESOURCE2a61ac20f438a4376a6f160e72db4265%E6%88%AA%E5%9B%BE.png"></p><h3 id="apt-get"><a href="#apt-get" class="headerlink" title="apt-get"></a><strong>apt-get</strong></h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">1</span>. sudo apt-<span class="hljs-keyword">get</span> install tree 安装tree<br><span class="hljs-number">2</span>. sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-comment">remove tree 卸载tree</span><br><span class="hljs-number">3</span>. sudo apt-<span class="hljs-keyword">get</span> update 更新软件<br><span class="hljs-number">4</span>. sudo apt-<span class="hljs-keyword">get</span> upgrade<br></code></pre></td></tr></table></figure><h3 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a><strong>rpm</strong></h3><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs subunit">*  检查某个软件是否安装<br># rpm -qa|grep java（查看java是否安装）<br>* 卸载已安装的软件<br># rpm -e --nodeps *****<br>同时卸载多个软件， 软件之间空格隔开<br>* 安装软件<br># rpm -ivh xxx.rpm<br><br><br>rpm -qa|grep java      #  查看java安装软件，通过 rpm 卸载低版本jdk<br>rpm -e --nodeps java<span class="hljs-string">-1</span>.8.0-openjdk-headless<span class="hljs-string">-1</span>.8.0.262.b10<span class="hljs-string">-1</span>.el7.x86_64<br>rpm -e --nodeps java<span class="hljs-string">-1</span>.8.0-openjdk<span class="hljs-string">-1</span>.8.0.262.b10<span class="hljs-string">-1</span>.el7.x86_64<br>rpm -e --nodeps java<span class="hljs-string">-1</span>.7.0-openjdk-headless<span class="hljs-string">-1</span>.7.0.261<span class="hljs-string">-2</span>.6.22.2.el7_8.x86_64<br>rpm -e --nodeps java<span class="hljs-string">-1</span>.7.0-openjdk<span class="hljs-string">-1</span>.7.0.261<span class="hljs-string">-2</span>.6.22.2.el7_8.x86_64<br></code></pre></td></tr></table></figure><h3 id="yum命令"><a href="#yum命令" class="headerlink" title="yum命令"></a><strong>yum命令</strong></h3><blockquote><p>只针对于centos和redhat系统<br>需要配置源<br>软件包依赖关系以及各个软件的安装顺序 </p></blockquote><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># yum安装jdk</span><br>yum <span class="hljs-keyword">install </span><span class="hljs-keyword">java-11-openjdk-devel.x86_64</span><br><span class="hljs-keyword"></span><span class="hljs-comment"># yum安装redis</span><br>yum <span class="hljs-keyword">install </span>redis<br><span class="hljs-comment"># yum安装nginx</span><br>yum -y <span class="hljs-keyword">install </span>nginx<br><br></code></pre></td></tr></table></figure><h3 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a><strong>tar命令</strong></h3><blockquote><p><strong>用于安装tar包(tar包里面是源码， 需要编译)</strong><br>—– 不推荐使用源码编译方式安装， 较复杂<br><strong>zip软件相关操作</strong><br>前提： 需要linux上安装的是否有zip的操作包<br>检查命令： <strong>rpm -qa | grep zip</strong></p><p><strong>###  解压</strong><br><strong>$ unzip xxx.zip</strong><br><strong>### 压缩为zip文件</strong><br><strong>$ zip yyy.zip filename</strong><br><strong>tar软件相关操作</strong><br><strong>### 解压</strong><br>$ tar -zxvf xxx.tar.gz      （解压到当前目录）<br>$ tar -zxvf xxx.tar.gz -C dirpath    (解压到指定目录)</p><p><strong>## 压缩</strong><br>$ tar zcvf zzz.tar.gz dir&#x2F;filename</p></blockquote><ul><li><strong>压缩包方式：linux安装jdk</strong></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs awk">第一步： 使用FileZila将jdk包传到linux上<br>第二步： 使用tar -zxvf **jdk**.tar.gz<br>第三步：切换到root用户，配置环境变量<br><span class="hljs-comment"># vi /etc/profile</span><br>编辑内容如下<br><span class="hljs-comment">## JAVA_HOME</span><br>export JAVA_HOME=<span class="hljs-regexp">/opt/</span>java/jdk1.<span class="hljs-number">8.0</span>_381<br>export PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br>下一步：source一下，让命令生效<br>source <span class="hljs-regexp">/etc/</span>profile<br><span class="hljs-keyword">exit</span><br>第四步：检查<br>echo <span class="hljs-variable">$JAVA_HOME</span><br>echo <span class="hljs-variable">$PATH</span><br>java<br>java -version<br></code></pre></td></tr></table></figure><ul><li><strong>压缩包方式：安装jdk11</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">1、先新建一个文件夹，<span class="hljs-built_in">mkdir</span> /usr/local/java<br>2、在宿主机执行 scp jdk-11.0.10_linux-x64_bin.tar.gz root@192.168.50.132:/usr/local/java2<br>3、在linux 执行<br>    <span class="hljs-built_in">cd</span>  /usr/local/java2/<br>    tar -zxvf jdk-11.0.10_linux-x64_bin.tar.gz<br>4、vi /etc/profile   <span class="hljs-comment"># 在 尾部添加如下内容：</span><br>    <span class="hljs-built_in">export</span> JAVA_HOME=/usr/local/java/jdk-11.0.10<br>    <span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br>    <span class="hljs-comment">#（！！！注意：JAVA_HOME的路径是你实际解压后的JDK的路径，千万别写错了）</span><br>5、<span class="hljs-built_in">source</span> /etc/profile   <span class="hljs-comment"># 刷新 配置文件</span><br>    java -version    <span class="hljs-comment"># 查看配置文件</span><br>    openjdk version <span class="hljs-string">&quot;1.8.0_262&quot;</span><br>    OpenJDK Runtime Environment (build 1.8.0_262-b10)<br>    OpenJDK 64-Bit Server VM (build 25.262-b10, mixed mode)<br></code></pre></td></tr></table></figure><h6 id="压缩包方式：安装tomcat"><a href="#压缩包方式：安装tomcat" class="headerlink" title="压缩包方式：安装tomcat"></a>压缩包方式：安装tomcat</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span>、在宿主机上，下载地址<br>http:<span class="hljs-regexp">//</span>tomcat.apache.org/download-<span class="hljs-number">10</span>.cgi<br><span class="hljs-number">2</span>、在服务器上 先新建一个文件夹，<br>mkdir <span class="hljs-regexp">/usr/</span>local/tomcat<br><span class="hljs-number">3</span>、在宿主机上 ，执行下面命令 上传安装包<br>scp apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">5</span>.zip root@<span class="hljs-number">192.168</span>.<span class="hljs-number">50.132</span>:<span class="hljs-regexp">/usr/</span>local/tomcat<br><span class="hljs-number">4</span>、在服务器上 通过root用户 解压<br>unzip  apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">5</span>.zip<br>unzip -l apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">5</span>.zip  <span class="hljs-comment"># 只是查看 不解压</span><br><span class="hljs-number">5</span>、启动tomcat服务<br>cd apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">5</span>/bin<br>./startup.sh<br>chmod <span class="hljs-number">744</span> ./*.sh<br>./startup.sh<br><span class="hljs-number">6</span>、验证安装<br>netstat -nl  <span class="hljs-comment"># 找到 8080端口 是 LISTEN</span><br>ifconfig<br>systemctl status firewalld  <span class="hljs-comment">#查看防火墙状态</span><br>systemctl stop firewalld   <span class="hljs-comment">#禁用防火墙</span><br>在宿主机浏览器<br>http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">50.132</span>:<span class="hljs-number">8080</span>/<br>显示：<br>Apache Tomcat/<span class="hljs-number">10.0</span>.<span class="hljs-number">5</span><br>If yo<span class="hljs-string">u&#x27;re seeing this, you&#x27;</span>ve successfully installed Tomcat. Congratulations!<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My First Post</title>
    <link href="/blog/2024/07/25/My-First-Post/"/>
    <url>/blog/2024/07/25/My-First-Post/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
